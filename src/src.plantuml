@startuml
title __SRC's Class Diagram__\n

  namespace  src{
    class bandCalc {
        - converter : Map<String, Double>
        - unitList : List<String>
        + askDatUnit()
        + baCalc()
        + bandCalc()
        + checkUnit()
        + convertBitsToEverything()
        + convertBitsToOther()
        + convertToBits()
    }
  }
  

  namespace src{
    class bigIntCalculator {
        - bigIntStr1 : BigInteger
        - bigIntStr2 : BigInteger
        + add()
        + bigIntCalculator()
        + div()
        + mult()
        + sub()
        + toString()
    }
  }
  

  namespace src{
    class bigIntMenu {
        + bigIntCalc()
        + bigIntCalculation()
        + bigIntMenu()
    }
  }
  

  namespace src{
    class bigIntNum {
        - a : BigInteger
        + bigIntNum()
        + convertToDec()
        + toString()
    }
  }
  

  namespace src{
    class binMenu {
        + bCalc()
        + binMenu()
        + binaryCalculation()
        + checkBinary()
        + displayEquationResults()
    }
  }
  

  namespace src{
    class binToDec {
        - a : String
        + binToDec()
        + convertBinToDec()
    }
  }
  

  namespace src{
    class binaryCalculator {
        - c : int
        - d : int
        + add()
        + binaryCalculator()
        + div()
        + getRemainder()
        + mult()
        + sub()
        + toString()
    }
  }
  

  namespace src{
    class binaryNum {
        - a : String
        + binaryNum()
        + convertToDec()
        + get()
        + toString()
    }
  }
  

  namespace src{
    class decMenu {
        + dCalc()
        + decMenu()
        + decimalCalculation()
    }
  }
  

  namespace src{
    class decNum {
        - a : double
        + convertToDec()
        + decNum()
        + toString()
    }
  }
  

  namespace src{
    class decToBin {
        - a : int
        + convertDecToBin()
        + decToBin()
    }
  }
  

  namespace src{
    class decToHex {
        - a : int
        + convertDecToHex()
        + decToHex()
    }
  }
  

  namespace src{
    class decimalCalculator {
        + add()
        + decimalCalculator()
        + div()
        + mult()
        + sub()
        + toString()
    }
  }
  

  namespace src{
    class hexMenu {
        + checkHex()
        + displayEquationResults()
        + findRemainder()
        + hCalc()
        + hexCalculation()
        + hexMenu()
    }
  }
  

  namespace src{
    class hexNum {
        - a : String
        + convertToDec()
        + hexNum()
        + toString()
    }
  }
  

  namespace src{
    class hexToDec {
        - a : String
        + convertHexToDec()
        + hexToDec()
    }
  }
  

  namespace src{
    class hexadecimalCalculator {
        - c : int
        - d : int
        + add()
        + div()
        + getRemainder()
        + hexadecimalCalculator()
        + mult()
        + sub()
        + toString()
    }
  }
  

  namespace src{
    class main {
        {static} + main()
    }
  }
  

  namespace src{
    abstract class number {
        {abstract} + convertToDec()
        {abstract} + toString()
    }
  }
  

  namespace src{
    abstract class numericCalculator {
        {abstract} + add()
        {abstract} + div()
        {abstract} + mult()
        {abstract} + sub()
        {abstract} + toString()
    }
  }
  

  bigIntCalculator -up-|> numericCalculator
  bigIntCalculator o-- number : a
  bigIntCalculator o-- number : b
  bigIntNum -up-|> number
  binaryCalculator -up-|> numericCalculator
  binaryCalculator o-- number : a
  binaryCalculator o-- number : b
  binaryCalculator o-- binaryNum : remainder
  binaryNum -up-|> number
  decNum -up-|> number
  decimalCalculator -up-|> numericCalculator
  decimalCalculator o-- number : a
  decimalCalculator o-- number : b
  hexNum -up-|> number
  hexadecimalCalculator -up-|> numericCalculator
  hexadecimalCalculator o-- number : a
  hexadecimalCalculator o-- number : b
  hexadecimalCalculator o-- hexNum : remainder

right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
